from pymavlink import mavutil
import time

master: mavutil.mavfile = mavutil.mavlink_connection(
    "tcp:192.168.1.90:5762",  source_system=1, source_component=90)
master.wait_heartbeat()
print("接続完了")

mode = 'GUIDED'
master.set_mode_apm(master.mode_mapping()[mode])

while True:
    if master.flightmode == mode:
        break
    master.recv_msg()
print("モード変更完了")

master.arducopter_arm()
print("アーム完了")


while True:
    msg = master.recv_match(type='HOME_POSITION', blocking=True)
    if msg is not None:
        home_latitude = msg.latitude / 1.0e7
        home_longitude = msg.longitude / 1.0e7
        home_altitude = msg.altitude / 1000.0
        print(
            f"ホームロケーション: lat={home_latitude},lon={home_longitude},alt={home_altitude}")
        break



target_altitude = 5

master.mav.command_long_send(
    master.target_system, master.target_component,
    mavutil.mavlink.MAV_CMD_NAV_TAKEOFF,
    0, 0, 0, 0, 0, 0, 0, target_altitude)

master.mav.command_long_send(
    master.target_system, master.target_component,
    mavutil.mavlink.MAV_CMD_SET_MESSAGE_INTERVAL,
    0, 33, 100000, 0, 0, 0, 0, 0)

while True:
    recieved_msg = master.recv_match(
        type='GLOBAL_POSITION_INT', blocking=True)
    current_altitude = recieved_msg.relative_alt / 1000

    print("高度: {}".format(current_altitude))

    if current_altitude >= target_altitude * 0.95:
        print("目標高度に到達")
        break

    time.sleep(0.1)


target_lat = 35.8793900
target_lon = 140.340410
target_alt = 5

master.mav.set_position_target_global_int_send(
    0, master.target_system, master.target_component,
    mavutil.mavlink.MAV_FRAME_GLOBAL_RELATIVE_ALT_INT,  
    0b0000111111111000,
    int(target_lat * 1e7), int(target_lon * 1e7), target_alt,
    0, 0, 0, 0, 0, 0, 0, 0, 0,)

while True:
    msg = master.recv_match(type='GLOBAL_POSITION_INT', blocking=True)
    if msg:
        current_lat = msg.lat / 1e7
        current_lon = msg.lon / 1e7
        current_alt = msg.relative_alt / 1000.0
        print(f"Current position: lat={current_lat}, lon={current_lon}, alt={current_alt}")

       
        if abs(current_lat - target_lat) < 0.0001 and abs(current_lon - target_lon) < 0.0001 and abs(current_alt - target_alt) < 0.5:
            print("Approaching target position, stopping logging.")
            break
print("Position logging stopped. Reached target position.")

target_lat = 35.8796880
target_lon = 140.3400910
target_alt = 5

master.mav.set_position_target_global_int_send(
    0, master.target_system, master.target_component,
    mavutil.mavlink.MAV_FRAME_GLOBAL_RELATIVE_ALT_INT,  
    0b0000111111111000,
    int(target_lat * 1e7), int(target_lon * 1e7), target_alt,
    0, 0, 0, 0, 0, 0, 0, 0, 0,)

while True:
    msg = master.recv_match(type='GLOBAL_POSITION_INT', blocking=True)
    if msg:
        current_lat = msg.lat / 1e7
        current_lon = msg.lon / 1e7
        current_alt = msg.relative_alt / 1000.0
        print(f"Current position: lat={current_lat}, lon={current_lon}, alt={current_alt}")

       
        if abs(current_lat - target_lat) < 0.0001 and abs(current_lon - target_lon) < 0.0001 and abs(current_alt - target_alt) < 0.5:
            print("Approaching target position, stopping logging.")
            break
print("Position logging stopped. Reached target position.")

target_lat = 35.8785410
target_lon = 140.338299
target_alt = 5

master.mav.set_position_target_global_int_send(
    0, master.target_system, master.target_component,
    mavutil.mavlink.MAV_FRAME_GLOBAL_RELATIVE_ALT_INT,  
    0b0000111111111000,
    int(target_lat * 1e7), int(target_lon * 1e7), target_alt,
    0, 0, 0, 0, 0, 0, 0, 0, 0,)

while True:
    msg = master.recv_match(type='GLOBAL_POSITION_INT', blocking=True)
    if msg:
        current_lat = msg.lat / 1e7
        current_lon = msg.lon / 1e7
        current_alt = msg.relative_alt / 1000.0
        print(f"Current position: lat={current_lat}, lon={current_lon}, alt={current_alt}")

       
        if abs(current_lat - target_lat) < 0.0001 and abs(current_lon - target_lon) < 0.0001 and abs(current_alt - target_alt) < 0.5:
            print("Approaching target position, stopping logging.")
            break
print("Position logging stopped. Reached target position.")

target_lat = 35.8781930
target_lon = 140.3387070
target_alt = 5

master.mav.set_position_target_global_int_send(
    0, master.target_system, master.target_component,
    mavutil.mavlink.MAV_FRAME_GLOBAL_RELATIVE_ALT_INT,  
    0b0000111111111000,
    int(target_lat * 1e7), int(target_lon * 1e7), target_alt,
    0, 0, 0, 0, 0, 0, 0, 0, 0,)

while True:
    msg = master.recv_match(type='GLOBAL_POSITION_INT', blocking=True)
    if msg:
        current_lat = msg.lat / 1e7
        current_lon = msg.lon / 1e7
        current_alt = msg.relative_alt / 1000.0
        print(f"Current position: lat={current_lat}, lon={current_lon}, alt={current_alt}")

       
        if abs(current_lat - target_lat) < 0.0001 and abs(current_lon - target_lon) < 0.0001 and abs(current_alt - target_alt) < 0.5:
            print("Approaching target position, stopping logging.")
            break
print("Position logging stopped. Reached target position.")

target_lat = 35.8793900
target_lon = 140.340410
target_alt = 5

master.mav.set_position_target_global_int_send(
    0, master.target_system, master.target_component,
    mavutil.mavlink.MAV_FRAME_GLOBAL_RELATIVE_ALT_INT,  
    0b0000111111111000,
    int(target_lat * 1e7), int(target_lon * 1e7), target_alt,
    0, 0, 0, 0, 0, 0, 0, 0, 0,)

while True:
    msg = master.recv_match(type='GLOBAL_POSITION_INT', blocking=True)
    if msg:
        current_lat = msg.lat / 1e7
        current_lon = msg.lon / 1e7
        current_alt = msg.relative_alt / 1000.0
        print(f"Current position: lat={current_lat}, lon={current_lon}, alt={current_alt}")

       
        if abs(current_lat - target_lat) < 0.0001 and abs(current_lon - target_lon) < 0.0001 and abs(current_alt - target_alt) < 0.5:
            print("Approaching target position, stopping logging.")
            break
print("Position logging stopped. Reached target position.")

mode = "RTL"

if mode not in master.mode_mapping():
    print('Unknown mode : {}'.format(mode))
    print('Try:', list(master.mode_mapping().keys()))
    sys.exit(1)

mode_id = master.mode_mapping()[mode]

master.mav.command_long_send(
    master.target_system, master.target_component,
    mavutil.mavlink.MAV_CMD_DO_SET_MODE, 0,
    mavutil.mavlink.MAV_MODE_FLAG_CUSTOM_MODE_ENABLED, mode_id, 0, 0, 0, 0, 0)

while True:
    if master.flightmode == mode:
        break
    master.recv_msg()

print("変更後モード:", master.flightmode)
